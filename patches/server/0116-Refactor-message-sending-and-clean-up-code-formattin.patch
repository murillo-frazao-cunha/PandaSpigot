From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: murillo <murillofrazaocunha@gmail.com>
Date: Thu, 17 Jul 2025 22:50:12 -0300
Subject: [PATCH] Refactor message sending and clean up code formatting


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 49477a0f4d237db75d869ed91dc5088f4b4385fe..7a47f4125a772dfbbb2fc7b84f0292d42d83d100 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -22,6 +22,7 @@ import java.util.logging.Level;
 import java.util.logging.Logger;
 import net.md_5.bungee.api.chat.BaseComponent;
 
+import net.md_5.bungee.api.chat.TextComponent;
 import net.minecraft.server.*;
 import net.minecraft.server.PacketPlayOutTitle.EnumTitleAction;
 
@@ -146,9 +147,10 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public void sendRawMessage(String message) {
         if (getHandle().playerConnection == null) return;
 
-        for (IChatBaseComponent component : CraftChatMessage.fromString(message)) {
-            getHandle().playerConnection.sendPacket(new PacketPlayOutChat(component));
-        }
+        PacketPlayOutChat packet = new PacketPlayOutChat();
+        packet.components = TextComponent.fromLegacyText(message);
+        getHandle().playerConnection.sendPacket(packet);
+
     }
 
     @Override
@@ -191,7 +193,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     @Override
     public void setPlayerListHeaderFooter(BaseComponent header, BaseComponent footer) {
         this.setPlayerListHeaderFooter(header == null ? null : new BaseComponent[]{header},
-                footer == null ? null : new BaseComponent[]{footer});
+            footer == null ? null : new BaseComponent[]{footer});
     }
 
 
@@ -345,21 +347,21 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
         String instrumentName = null;
         switch (instrument) {
-        case 0:
-            instrumentName = "harp";
-            break;
-        case 1:
-            instrumentName = "bd";
-            break;
-        case 2:
-            instrumentName = "snare";
-            break;
-        case 3:
-            instrumentName = "hat";
-            break;
-        case 4:
-            instrumentName = "bassattack";
-            break;
+            case 0:
+                instrumentName = "harp";
+                break;
+            case 1:
+                instrumentName = "bd";
+                break;
+            case 2:
+                instrumentName = "snare";
+                break;
+            case 3:
+                instrumentName = "hat";
+                break;
+            case 4:
+                instrumentName = "bassattack";
+                break;
         }
 
         float f = (float) Math.pow(2.0D, (note - 12.0D) / 12.0D);
@@ -525,7 +527,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         }
 
         if (entity.playerConnection == null || entity.playerConnection.isDisconnected()) {
-           return false;
+            return false;
         }
 
         if (entity.passenger != null) {
@@ -851,7 +853,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
             if (event.isCancelled()) {
                 return;
             }
-            
+
             getHandle().setSpectatorTarget(getHandle());
             getHandle().playerInteractManager.setGameMode(WorldSettings.EnumGamemode.getById(mode.getValue()));
             getHandle().fallDistance = 0;
@@ -1034,21 +1036,21 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public com.destroystokyo.paper.profile.PlayerProfile getPlayerProfile() {
         return new com.destroystokyo.paper.profile.CraftPlayerProfile(this).clone();
     }
-    
+
     private void refreshPlayer() {
         EntityPlayer handle = getHandle();
-        
+
         Location loc = getLocation();
-        
+
         PlayerConnection connection = handle.playerConnection;
         reregisterPlayer(handle);
-        
+
         // Respawn the player then update their position and selected slot
         WorldServer worldserver = (WorldServer) handle.getWorld();
         connection.sendPacket(new net.minecraft.server.PacketPlayOutRespawn(worldserver.dimension,
-                worldserver.getDifficulty(),
-                worldserver.worldData.getType(),
-                handle.playerInteractManager.getGameMode()));
+            worldserver.getDifficulty(),
+            worldserver.worldData.getType(),
+            handle.playerInteractManager.getGameMode()));
         handle.updateAbilities();
         connection.sendPacket(new net.minecraft.server.PacketPlayOutPosition(loc.getX(), loc.getY(), loc.getZ(), loc.getYaw(), loc.getPitch(), new HashSet<>()));
         net.minecraft.server.MinecraftServer.getServer().getPlayerList().updateClient(handle);
@@ -1058,7 +1060,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         for (MobEffect mobEffect : handle.getEffects()) {
             connection.sendPacket(new net.minecraft.server.PacketPlayOutEntityEffect(handle.getId(), mobEffect));
         }
-        
+
         if (this.isOp()) {
             this.setOp(false);
             this.setOp(true);
@@ -1229,7 +1231,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
 
     public void addChannel(String channel) {
-       com.google.common.base.Preconditions.checkState( channels.size() < 128, "Too many channels registered" ); // Spigot
+        com.google.common.base.Preconditions.checkState( channels.size() < 128, "Too many channels registered" ); // Spigot
         if (channels.add(channel)) {
             server.getPluginManager().callEvent(new PlayerRegisterChannelEvent(this, channel));
         }
@@ -1574,12 +1576,12 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
                     if ( effect.getName().startsWith( p.b().replace("_", "") ) )
                     {
                         particle = p;
-                        if ( effect.getData() != null ) 
+                        if ( effect.getData() != null )
                         {
                             if ( effect.getData().equals( org.bukkit.Material.class ) )
                             {
                                 extra = new int[]{ id };
-                            } else 
+                            } else
                             {
                                 extra = new int[]{ (data << 12) | (id & 0xFFF) };
                             }
@@ -1614,7 +1616,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         @Override
         public String getLocale()
         {
-           return getHandle().locale;
+            return getHandle().locale;
         }
 
         @Override
@@ -1631,12 +1633,12 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
         @Override
         public void sendMessage(BaseComponent component) {
-          sendMessage( new BaseComponent[] { component } );
+            sendMessage( new BaseComponent[] { component } );
         }
 
         @Override
         public void sendMessage(BaseComponent... components) {
-           if ( getHandle().playerConnection == null ) return;
+            if ( getHandle().playerConnection == null ) return;
 
             PacketPlayOutChat packet = new PacketPlayOutChat();
             packet.components = components;
